using System;

public class Life
{
    int n = 0;
    int m = 0;
    int[,] arr;
    public int N
    {
        get { return n; }
        set { n = value; }
    }
    public int M
    {
        get { return m; }
        set { m = value; }
    }
    //создаем пустой массив
    public void CreateArr()
    {
        arr = new int[n, m];
    }
    //заполняем массив (поле) вводимыми значениями
    public void SetValue(int i, int j, int value)
    {
        arr[i, j] = value;
    }
    //вывод массива (поля)
    public int GetValue(int i, int j)
    {
        return arr[i, j];
    }
    //заполняем массив (поле) рандомными значениями
    public void RandomSetArr()
    {
        CreateArr();
        Random rnd = new Random();
        for (int i = 0; i < n; i++)
            for (int j = 0; j < m; j++)
                arr[i, j] = rnd.Next(0, 2);
    }
    //цикл проверок (рекурсия шагов игры)
    public void Step()
    {
        //создаем дополнительный массив, который будет присваивать значение следующего шага игры
        int[,] arr2 = new int[n, m];

        //заполняем его нулями (мертвыми клетками)
        for (int i = 0; i < n; i++)
            for (int j = 0; j < m; j++)
                arr2[i, j] = 0;

        //проверка каждой клетки поля в текущем положении на "смерть" или "оживание"
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {
                int k = 0;
                if (i == 0)
                {
                    //складываем значения клеток, так как 1 - клетка живая, 0 - мертвая
                    if (j == 0) k = arr[n - 1, m - 1] + arr[n - 1, 0] + arr[n - 1, 1] + arr[0, m - 1] + arr[0, 1] + arr[1, m - 1] + arr[1, 0] + arr[1, 1];
                    else if (j == m - 1) k = arr[n - 1, m - 2] + arr[n - 1, m - 1] + arr[n - 1, 0] + arr[0, m - 2] + arr[0, 0] + arr[1, m - 2] + arr[1, m - 1] + arr[1, 0];
                    else k = arr[n - 1, j - 1] + arr[n - 1, j] + arr[n - 1, j + 1] + arr[0, j - 1] + arr[0, j + 1] + arr[1, j - 1] + arr[1, j] + arr[1, j + 1];

                    //если клетка живая и имеет рядом с собой 2-3 живых клетки, то она остается жить, иначе умирает
                    //записываем получившийся результат во временный массив arr2
                    if (arr[i, j] == 1)
                    {
                        if (k < 2 || k > 3) arr2[i, j] = 0;
                        else arr2[i, j] = 1;
                    }
                    //если мертвая клетка имеет 3 живых соседей, то она оживает
                    else
                    {
                        if (k == 3) arr2[i, j] = 1;
                    }
                }
                else if (i == n - 1)
                {
                    //складываем значения клеток, так как 1 - клетка живая, 0 - мертвая
                    if (j == 0) k = arr[n - 2, m - 1] + arr[n - 2, 0] + arr[n - 2, 1] + arr[n - 1, m - 1] + arr[n - 1, 1] + arr[0, n - 1] + arr[0, 0] + arr[0, 1];
                    else if (j == m - 1) k = arr[n - 2, m - 2] + arr[n - 2, m - 1] + arr[n - 2, 0] + arr[n - 1, m - 2] + arr[n - 1, 0] + arr[0, m - 2] + arr[0, m - 1] + arr[0, 0];
                    else k = arr[n - 2, j - 1] + arr[n - 2, j] + arr[n - 2, j + 1] + arr[n - 1, j - 1] + arr[n - 1, j + 1] + arr[0, j - 1] + arr[0, j] + arr[0, j + 1];

                    //если клетка живая и имеет рядом с собой 2-3 живых клетки, то она остается жить, иначе умирает
                    //записываем получившийся результат во временный массив arr2
                    if (arr[i, j] == 1)
                    {
                        if (k < 2 || k > 3) arr2[i, j] = 0;
                        else arr2[i, j] = 1;
                    }
                    //если мертвая клетка имеет 3 живых соседей, то она оживает
                    else
                    {
                        if (k == 3) arr2[i, j] = 1;
                    }
                }
                else if (j == 0)
                {
                    k = arr[i - 1, m - 1] + arr[i - 1, 0] + arr[i - 1, 1] + arr[i, m - 1] + arr[i, 1] + arr[i + 1, m - 1] + arr[i + 1, 0] + arr[i + 1, 1];

                    //если клетка живая и имеет рядом с собой 2-3 живых клетки, то она остается жить, иначе умирает
                    //записываем получившийся результат во временный массив arr2
                    if (arr[i, j] == 1)
                    {
                        if (k < 2 || k > 3) arr2[i, j] = 0;
                        else arr2[i, j] = 1;
                    }
                    //если мертвая клетка имеет 3 живых соседей, то она оживает
                    else
                    {
                        if (k == 3) arr2[i, j] = 1;
                    }
                }
                else if (j == m - 1)
                {
                    k = arr[i - 1, m - 2] + arr[i - 1, m - 1] + arr[i - 1, 0] + arr[i, m - 2] + arr[i, 0] + arr[i + 1, m - 2] + arr[i + 1, m - 1] + arr[i + 1, 0];

                    //если клетка живая и имеет рядом с собой 2-3 живых клетки, то она остается жить, иначе умирает
                    //записываем получившийся результат во временный массив arr2
                    if (arr[i, j] == 1)
                    {
                        if (k < 2 || k > 3) arr2[i, j] = 0;
                        else arr2[i, j] = 1;
                    }
                    //если мертвая клетка имеет 3 живых соседей, то она оживает
                    else
                    {
                        if (k == 3) arr2[i, j] = 1;
                    }
                }
                else
                {
                    k = arr[i - 1, j - 1] + arr[i - 1, j] + arr[i - 1, j + 1] + arr[i, j - 1] + arr[i, j + 1] + arr[i + 1, j - 1] + arr[i + 1, j] + arr[i + 1, j + 1];

                    //если клетка живая и имеет рядом с собой 2-3 живых клетки, то она остается жить, иначе умирает
                    //записываем получившийся результат во временный массив arr2
                    if (arr[i, j] == 1)
                    {
                        if (k < 2 || k > 3) arr2[i, j] = 0;
                        else arr2[i, j] = 1;
                    }
                    //если мертвая клетка имеет 3 живых соседей, то она оживает
                    else
                    {
                        if (k == 3) arr2[i, j] = 1;
                    }
                }
            }
        }
        //присваиваем массиву класса новые значения
        for (int i = 0; i < n; i++)
            for (int j = 0; j < m; j++)
                arr[i, j] = arr2[i, j];
    }
}